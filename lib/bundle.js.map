{"version":3,"sources":["webpack:///webpack/bootstrap 6c78bac781f80f546bec","webpack:///./lib/util.js","webpack:///./lib/moving_object.js","webpack:///./lib/ship.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/bomb.js","webpack:///./lib/enemy.js","webpack:///./lib/main.js","webpack:///./lib/particle.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;;;;;;AClCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AChCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AC/CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,kBAAkB;AACtC;AACA,wCAAwC,gCAAgC;AACxE;;AAEA,oBAAoB,kBAAkB;AACtC;AACA,wCAAwC,gCAAgC;AACxE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,UAAU;AAC3B;AACA,qCAAqC,8BAA8B;AACnE;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C,qBAAqB,uBAAuB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,WAAW;AAC3C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACpPA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;AC1CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,2DAA2D,aAAa;AACxE,SAAS,qCAAqC;AAC9C,SAAS,sCAAsC;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACrEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AChEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACVD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6c78bac781f80f546bec","const Util = {\n  randomInRange(min, max) {\n    return Math.random() * (max-min) + max;\n  },\n\n  dir(vec) {\n    var norm = Util.norm(vec);\n    return Util.scale(vec, 1 / norm);\n  },\n\n  dist(pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n\n  randomVec(length) {\n    const deg = 2 * Math.PI * Math.random();\n    return Util.scale([Math.sin(deg), Math.cos(deg)], length);\n  },\n\n  norm(vec) {\n    return Util.dist([0, 0], vec);\n  },\n\n  scale(vec, m) {\n    return [vec[0] * m, vec[1] * m];\n  },\n\n  findVector(pos1, pos2) {\n    return [pos2[0] - pos1[0], pos2[1] - pos1[1]];\n  }\n};\n\nmodule.exports = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 0\n// module chunks = 0","const Util = require('./util');\n\nclass MovingObject {\n  constructor(stage, options) {\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.shape = options.shape;\n    this.game = options.game;\n    this.start = 0;\n\n    stage.addChild(this.shape);\n  }\n\n  draw() {\n    this.shape.x = this.pos[0];\n    this.shape.y = this.pos[1];\n  }\n\n  isCollidedWith(otherObject) {\n    let x = Math.abs(this.shape.x - otherObject.shape.x);\n    let y = Math.abs(this.shape.y - otherObject.shape.y);\n    let type = (this.shape !== otherObject.shape);\n    return (type && x < 30 && y < 30);\n  }\n\n  collideWith(otherObject) {}\n\n  remove() {\n    this.game.remove(this);\n  }\n}\n\nmodule.exports = MovingObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/moving_object.js\n// module id = 1\n// module chunks = 0","const MovingObject = require(\"./moving_object\");\nconst Util = require(\"./util\");\n\nclass Ship extends MovingObject {\n  constructor(stage, options) {\n    options.shape = new createjs.Shape().set(options.pos);\n    options.shape.graphics.s('white').ss(1);\n    options.shape.graphics.beginFill('white').arc(0, 0, 18, 0, 6.29).endFill();\n    options.vel = options.vel || [0, 0];\n    super(stage, options);\n  }\n\n  maxAccel(accel) {\n    if (accel[0] > 25) {\n      accel[0] = 25;\n    } else if (accel[0] < -25) {\n      accel[0] = -25;\n    }\n\n    if (accel[1] > 25) {\n      accel[1] = 25;\n    } else if (accel[1] < -25) {\n      accel[1] = -25;\n    }\n\n    return accel;\n  }\n\n  move(delta, mousePos) {\n    let accel = Util.findVector(this.pos, [mousePos[0] - 50, mousePos[1] -50]);\n    let maxAccel = this.maxAccel(accel);\n    let newPos = [(this.pos[0] + maxAccel[0]), (this.pos[1] + maxAccel[1])];\n\n    if (this.game.isOutOfBounds(newPos)) {\n      if (newPos[0] <= 0 || newPos[0] >= this.game.DIM_X) {\n        maxAccel[0] = 0;\n      }\n\n      if (newPos[1] <= 0 || newPos[0] >= this.game.DIM_Y) {\n        maxAccel[1] = 0;\n      }\n    }\n\n    this.pos = [(this.pos[0] + maxAccel[0]), (this.pos[1] + maxAccel[1])];\n  }\n}\n\nmodule.exports = Ship;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/ship.js\n// module id = 2\n// module chunks = 0","const Ship = require(\"./ship\");\nconst Enemy = require(\"./enemy\");\nconst Bomb = require(\"./bomb\");\nconst Util = require(\"./util\");\nconst Particle = require(\"./particle\");\n\nclass Game {\n  constructor(stage) {\n    this.setBounds();\n    this.stage = stage;\n    this.over = true;\n    this.level = 1;\n    this.ships = [];\n    this.enemies = [];\n    this.bombs = [];\n    this.score = 0;\n    this.addShip();\n\n    setInterval(this.addEnemy.bind(this), 3000);\n    setInterval(this.addBombs.bind(this), 4000);\n\n    this.particles = [];\n  }\n\n  setBounds() {\n    let width = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    let height = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n\n    this.DIM_X = width;\n    this.DIM_Y = height;\n  }\n\n  allObjects() {\n    return [].concat(this.ships, this.enemies, this.bombs);\n  }\n\n  add(object) {\n    if (object instanceof Ship) {\n      this.ships.push(object);\n    } else if (object instanceof Enemy) {\n      this.enemies.push(object);\n    } else if (object instanceof Bomb) {\n      this.bombs.push(object);\n    }\n  }\n\n  remove(object) {\n    if (object instanceof Ship) {\n      this.ships.splice(this.ships.indexOf(object), 1);\n    } else if (object instanceof Enemy) {\n      this.enemies.splice(this.enemies.indexOf(object), 1);\n    } else if (object instanceof Bomb) {\n      this.bombs.splice(this.bombs.indexOf(object), 1);\n    } else if (object instanceof Particle) {\n      this.particles.splice(this.particles.indexOf(object), 1);\n    }\n    this.stage.removeChild(object.shape);\n  }\n\n  draw() {\n    this.allObjects().forEach(object => {\n      object.draw(this.stage);\n    });\n\n    this.particles.forEach((particle) => {\n      if (particle.isDead()) {\n        this.remove(particle);\n      } else {\n        particle.draw();\n      }\n    });\n  }\n\n  middlePosition() {\n    const midX = this.DIM_X / 2;\n    const midY = this.DIM_Y / 2;\n    return [midX, midY];\n  }\n\n  randomEnemyPosition(level) {\n    let posX;\n    let posY;\n\n    if (level === 0) {\n      posX = Util.randomInRange(1, 150);\n      posY = Util.randomInRange(1, 150);\n\n    } else if (level === 2) {\n      posX = Util.randomInRange(this.DIM_X - 150, this.DIM_X);\n      posY = Util.randomInRange(1, 150);\n\n    } else if (level === 3) {\n      posX = Util.randomInRange(this.DIM_X - 150, this.DIM_X);\n      posY = Util.randomInRange(this.DIM_Y - 150, this.DIM_Y);\n\n    } else {\n      posX = Util.randomInRange(1, 150);\n      posY = Util.randomInRange(this.DIM_Y - 150, this.DIM_Y);\n    }\n\n    return [posX, posY];\n  }\n\n  randomBombPosition() {\n    return [\n      Math.random() * (this.DIM_X - 100),\n      Math.random() * (this.DIM_Y - 100)\n    ];\n  }\n\n  isOutOfBounds(pos) {\n    return (pos[0] < 0 || pos[1] < 0) ||\n      (pos[0] > this.DIM_X || pos[1] > this.DIM_Y);\n  }\n\n  addShip() {\n    const ship = new Ship(this.stage, {\n      pos: this.middlePosition(),\n      game: this\n    });\n\n    this.add(ship);\n    return ship;\n  }\n\n  addEnemy() {\n    if (!this.over) {\n      let numEnemies = this.level * 4;\n      if (numEnemies > 40) {\n        numEnemies = 40;\n      }\n\n      for(let i = 0; i < numEnemies/2; i++) {\n        let enemyPosition = this.randomEnemyPosition(this.level % 4);\n        this.add(new Enemy(this.stage, { game:this, pos: enemyPosition }));\n      }\n\n      for(let i = 0; i < numEnemies/2; i++) {\n        let enemyPosition = this.randomEnemyPosition((this.level + 2) % 4);\n        this.add(new Enemy(this.stage, { game:this, pos: enemyPosition }));\n      }\n\n      this.level += 1;\n    }\n  }\n\n  addBombs() {\n    if (this.bombs.length > 4) {\n      return;\n    }\n    let amount = this.bombs.length / 2;\n    if (amount < 6) {\n      amount = 2;\n    }\n\n    for (let i=0; i<amount; i++) {\n      let bombPosition = this.randomBombPosition();\n      this.add(new Bomb(this.stage, {game: this, pos: bombPosition}));\n    }\n  }\n\n  moveObjects(delta, mousePos) {\n    this.allObjects().forEach(object => {\n      object.move(delta, mousePos);\n    });\n  }\n\n  checkCollisions() {\n    const allObjects = this.allObjects();\n    for (let i = 0; i < allObjects.length; i++) {\n      for (let j = 0; j < allObjects.length; j++) {\n        const obj1 = allObjects[i];\n        const obj2 = allObjects[j];\n\n        if (obj1.isCollidedWith(obj2)) {\n          const collision = obj1.collideWith(obj2, this.stage);\n          if (collision) return;\n        }\n      }\n    }\n    $('#score1').text(`Score: ${this.score}`);\n  }\n\n  step(delta, mousePos) {\n    this.moveObjects(delta, mousePos);\n    this.checkCollisions();\n  }\n\n  reset() {\n    this.over = true;\n    this.level = 1;\n    this.ships = [];\n    this.enemies = [];\n    this.bombs = [];\n    this.score = 0;\n    this.addShip();\n\n    this.particles = [];\n  }\n\n  explode(bomb) {\n    this.createExplosion(bomb.pos[0], bomb.pos[1], \"#ADD8E6\");\n    this.createExplosion(bomb.pos[0], bomb.pos[1], \"#00ced1\");\n    this.removeBlastRadius(bomb);\n    this.remove(bomb);\n  }\n\n  removeBlastRadius(bomb) {\n    this.enemies.forEach( enemy => {\n      if (this.inBlastRadius(bomb.pos, enemy.pos)) {\n        this.remove(enemy);\n        this.score += 1;\n      }\n    });\n  }\n\n  inBlastRadius(pos1, pos2) {\n    return (Util.dist(pos1, pos2) <= Game.BLAST_RADIUS);\n  }\n\n  createExplosion(posX, posY, color) {\n    let count = 100;\n    let minSpeed = 20;\n    let maxSpeed = 40;\n    let minSize = .5;\n    let maxSize = 1.2;\n\n    for (let angle = 0; angle < 360; angle += Math.round(360/count)) {\n      let particle = new Particle(this.stage);\n      let size = Util.randomInRange(minSize, maxSize);\n      let speed = Util.randomInRange(minSpeed, maxSpeed);\n      let velX = speed * Math.cos(angle * Math.PI / 180.0);\n      let velY = speed * Math.sin(angle * Math.PI / 180.0);\n\n      particle.radius = size;\n      particle.pos = [posX, posY];\n      particle.vel = [velX, velY];\n      particle.color = color;\n      this.particles.push(particle);\n    }\n  }\n}\n\nGame.BLAST_RADIUS = 250;\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 3\n// module chunks = 0","class GameView {\n  constructor(game, stage) {\n    this.stage = stage;\n    this.game = game;\n\n    this.beginGame = this.beginGame.bind(this);\n\n    $('#startButton').on('click', (event) => {\n      this.game.over = false;\n      $('#startModal').css(\"visibility\", \"hidden\");\n      this.beginGame();\n    });\n\n    $('#gameOverModal').css(\"visibility\", \"hidden\");\n\n    $('#playAgain').on('click', (event) => {\n      this.game.over = false;\n      $('#gameOverModal').css(\"visibility\", \"hidden\");\n    });\n  }\n\n  beginGame() {\n    createjs.Ticker.setInterval(60);\n    createjs.Ticker.on('tick', (event) => {\n      if (this.game.over) {\n        this.stage.removeAllChildren();\n        this.stage.clear();\n        this.stage.update();\n        this.game.reset();\n        return;\n      } else {\n        let newPosX = this.stage.mouseX;\n        let newPosY = this.stage.mouseY;\n        let mousePos = [newPosX, newPosY];\n        this.game.step(event.delta, mousePos);\n        this.game.draw();\n        this.stage.update();\n      }\n    });\n  }\n}\n\nmodule.exports = GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 4\n// module chunks = 0","const MovingObject = require('./moving_object');\nconst Util = require('./util');\nconst Ship = require('./ship');\n\nclass Bomb extends MovingObject {\n  constructor(stage, options) {\n    options.shape = new createjs.Shape().set(options.pos);\n    options.shape.graphics.beginFill('#00E5EE').drawPolyStar(0, 0, 20, 5, .5, -15);\n    options.shape.filters = [new createjs.ColorFilter(1,1.5,1,1)];\n    options.shape.cache(-20, -20, 40, 40);\n    options.pos = options.pos;\n    options.vel = Util.randomVec(1);\n    super(stage, options);\n  }\n\n  maxVelocity(velX, velY) {\n    let newX = velX, newY = velY;\n    if (velX > 3) {\n      newX = 3;\n    } else if (velX < -3) {\n      newX = -3;\n    }\n\n    if (velY > 3) {\n      newY = 3;\n    } else if (velY < -3) {\n      newY = -3;\n    }\n\n    return [newX, newY];\n  }\n\n  move(delta, stage) {\n\n    this.shape.updateCache();\n\n    var tween = createjs.Tween.get(this.shape.filters[0], { loop: true })\n    .to({redMultiplier:0, greenMultiplier:.7 }, 700)\n    .to({redMultiplier:1, greenMultiplier:1.0 }, 700);\n\n    const velocityScale = delta / NORMAL_FRAME_TIME_DELTA,\n      offsetX = this.vel[0] * velocityScale,\n      offsetY = this.vel[1] * velocityScale;\n\n    let maxVelocity = this.maxVelocity(offsetX, offsetY);\n    const oldPos = this.pos;\n    this.pos = [this.pos[0] + maxVelocity[0], this.pos[1] + maxVelocity[1]];\n    if (this.game.isOutOfBounds(this.pos)) {\n      if (this.pos[0] <= 0 || this.pos[0] >= 945) {\n        this.vel[0] *= -1;\n      }\n\n      if (this.pos[1] <= 0 || this.pos[1] >= 740) {\n        this.vel[1] *= -1;\n      }\n      this.pos = oldPos;\n    }\n  }\n\n  collideWith(otherObject, stage) {\n    if (otherObject instanceof Ship) {\n      this.game.explode(this, stage);\n      return true;\n    }\n  }\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\n\nmodule.exports = Bomb;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/bomb.js\n// module id = 5\n// module chunks = 0","const MovingObject = require(\"./moving_object\");\nconst Util = require(\"./util\");\nconst Ship = require(\"./ship\");\n\nclass Enemy extends MovingObject {\n  constructor(stage, options) {\n    options.shape = new createjs.Shape().set(options.pos);\n    options.shape.graphics.s('#00ff00').ss(1);\n    options.shape.graphics.drawRect(0, 0, 30, 30);\n    options.vel = options.vel || [0, 0];\n    super(stage, options);\n  }\n\n  maxVelocity(velX, velY) {\n    let newX = velX, newY = velY;\n\n    if (velX > 5) {\n      newX = 5;\n    } else if (velX < -5) {\n      newX = -5;\n    }\n\n    if (velY > 5) {\n      newY = 5;\n    } else if (velY < -5) {\n      newY = -5;\n    }\n\n    return [newX, newY];\n  }\n\n\n  move(delta) {\n    let shift = Math.floor(Math.random() * 10) + 5;\n    this.shape.skewX += shift;\n    this.shape.skewY += shift;\n\n    if (this.start < 45) {\n      this.start += 1;\n      return;\n    }\n\n    let impulse = Util.findVector(this.pos, this.game.ships[0].pos);\n    let dir = Util.dir(impulse);\n    let newVel = [this.vel[0] + dir[0], this.vel[1] + dir[1]];\n    let maxVel = this.maxVelocity(newVel[0], newVel[1]);\n    this.vel = maxVel;\n\n\n    this.pos = [this.pos[0] + maxVel[0], this.pos[1] + maxVel[1]];\n  }\n\n  collideWith(otherObject) {\n    if (otherObject instanceof Ship) {\n      this.game.over = true;\n      $('#gameOverModal').css('visibility', 'visible');\n      $('#score').text(`Score:${this.game.score}`);\n      return true;\n    }\n  }\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\n\nmodule.exports = Enemy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/enemy.js\n// module id = 6\n// module chunks = 0","const Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementById(\"myCanvas\");\n\n  let stage = new createjs.Stage(\"myCanvas\");\n  window.stage = stage;\n  const game = new Game(stage);\n  new GameView(game, stage);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.js\n// module id = 7\n// module chunks = 0","class Particle {\n  constructor(stage) {\n    this.stage = stage;\n    this.lifetime = 3;\n    this.radius = 8;\n    this.color = \"\";\n    this.pos = [0, 0];\n    this.vel = [0, 0];\n    this.shape = null;\n  }\n\n  isDead() {\n    return this.lifetime < 1 || (this.shape !== null && this.shape.scale >= 0);\n  }\n\n  draw() {\n    this.lifetime -= 1;\n\n    if (this.shape === null) {\n      this.shape = new createjs.Shape();\n      this.shape.graphics.s(this.color).ss(1);\n      this.shape.graphics.drawCircle(this.radius*2, this.radius*2, this.radius);\n\n      this.stage.addChild(this.shape);\n    }\n\n    this.shape.x = this.pos[0];\n    this.shape.y = this.pos[1];\n\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n  }\n}\n\nmodule.exports = Particle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/particle.js\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}